{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server server.",
        "title": "FoodTinder Swagger API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/session": {
            "post": {
                "description": "New session id is stored in a cookie with key \"session_id\"",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Creates a new session",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/votes": {
            "get": {
                "description": "Gets all votes given by a sessionid",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Gets all votes given by a sessionid",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/voting.Vote"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Inserts or updates a given vote for a product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Inserts or updates a given vote for a product",
                "parameters": [
                    {
                        "description": "Vote",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/voting.VoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/voting.Vote"
                        }
                    }
                }
            }
        },
        "/api/v1/votes/{product_id}": {
            "get": {
                "description": "Returns average votes for a product",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Returns average votes for a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/voting.AvgVoteResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "voting.AvgVoteResponse": {
            "type": "object",
            "properties": {
                "avg": {
                    "type": "number"
                },
                "product_id": {
                    "type": "string"
                },
                "vote_count": {
                    "type": "integer"
                }
            }
        },
        "voting.Vote": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "voting.VoteRequest": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string"
                },
                "score": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                }
            }
        }
    }
}