basePath: /
definitions:
  voting.AvgVoteResponse:
    properties:
      avg:
        type: number
      product_id:
        type: string
      vote_count:
        type: integer
    type: object
  voting.Vote:
    properties:
      id:
        type: string
      score:
        type: integer
      session_id:
        type: string
    type: object
  voting.VoteRequest:
    properties:
      product_id:
        type: string
      score:
        maximum: 5
        minimum: 1
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: FoodTinder Swagger API
  version: "2.0"
paths:
  /api/v1/session:
    post:
      consumes:
      - '*/*'
      description: New session id is stored in a cookie with key "session_id"
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Creates a new session
      tags:
      - root
  /api/v1/votes:
    get:
      consumes:
      - '*/*'
      description: Gets all votes given by a sessionid
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/voting.Vote'
            type: array
      summary: Gets all votes given by a sessionid
      tags:
      - root
    post:
      consumes:
      - application/json
      description: Inserts or updates a given vote for a product
      parameters:
      - description: Vote
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/voting.VoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/voting.Vote'
      summary: Inserts or updates a given vote for a product
      tags:
      - root
  /api/v1/votes/{product_id}:
    get:
      consumes:
      - '*/*'
      description: Returns average votes for a product
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/voting.AvgVoteResponse'
      summary: Returns average votes for a product
      tags:
      - root
schemes:
- http
swagger: "2.0"
